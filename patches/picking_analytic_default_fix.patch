=== modified file 'account_analytic_default/account_analytic_default.py'
--- account_analytic_default/account_analytic_default.py    2011-01-14 00:11:01 +0000
+++ account_analytic_default/account_analytic_default.py    2014-04-16 09:26:14 +0000
@@ -88,14 +88,15 @@
 class stock_picking(osv.osv):
     _inherit = "stock.picking"

-    def _get_account_analytic_invoice(self, cursor, user, picking, move_line):
+    def _get_account_analytic_invoice(self, cursor, user, picking, move_line, context=None):
+        if context is None: context = {}
         partner_id = picking.address_id and picking.address_id.partner_id or False
-        rec = self.pool.get('account.analytic.default').account_get(cursor, user, move_line.product_id.id, partner_id and partner_id.id, user, time.strftime('%Y-%m-%d'), context={})
+        rec = self.pool.get('account.analytic.default').account_get(cursor, user, move_line.product_id.id, partner_id and partner_id.id, user, time.strftime('%Y-%m-%d'), context=context)

         if rec:
             return rec.analytic_id.id

-        return super(stock_picking, self)._get_account_analytic_invoice(cursor, user, picking, move_line)
+        return super(stock_picking, self)._get_account_analytic_invoice(cursor, user, picking, move_line, context=context)

 stock_picking()


=== modified file 'stock/stock.py'
--- stock/stock.py  2011-04-08 13:32:12 +0000
+++ stock/stock.py  2014-04-16 09:27:22 +0000
@@ -918,7 +918,7 @@
         else:
             return map(lambda x: x.id, taxes)

-    def _get_account_analytic_invoice(self, cr, uid, picking, move_line):
+    def _get_account_analytic_invoice(self, cr, uid, picking, move_line, context=None):
         return False

     def _invoice_line_hook(self, cr, uid, move_line, invoice_line_id):
@@ -1052,7 +1052,8 @@
                         move_line, inv_type)
                 discount = self._get_discount_invoice(cr, uid, move_line)
                 tax_ids = self._get_taxes_invoice(cr, uid, move_line, inv_type)
-                account_analytic_id = self._get_account_analytic_invoice(cr, uid, picking, move_line)
+                context['inv_type'] = inv_type
+                account_analytic_id = self._get_account_analytic_invoice(cr, uid, picking, move_line, context=context)

                 #set UoS if it's a sale and the picking doesn't have one
                 uos_id = move_line.product_uos and move_line.product_uos.id or False

