=== modified file 'account_payment_extension/payment.py'
--- account_payment_extension/payment.py    2011-11-07 10:28:10 +0000
+++ account_payment_extension/payment.py    2014-11-26 18:50:26 +0000
@@ -134,7 +134,7 @@
         try:
             # find() function will throw an exception if no period can be found for
             # current date. That should not be a problem because user would be notified
-            # but as this model inherits an existing one, once installed it will create
+            # but as this model inherits an existing one, once installed it will create
             # the new field and try to update existing records (even if there are no records yet)
             # So we must ensure no exception is thrown, otherwise the module can only be installed
             # once periods are created.
@@ -191,7 +191,7 @@
             for line in move.line_ids:
                 if line.payment_move_id:
                     remove += [ line.payment_move_id.id ]
-
+
         self.pool.get('account.move').button_cancel( cr, uid, remove, context=context)
         self.pool.get('account.move').unlink(cr, uid, remove, context)
         self.write( cr, uid, ids, {
@@ -241,7 +241,7 @@
                     line_amount = line.amount_currency or line.amount
                 else:
                     line_amount = -line.amount_currency or -line.amount
-
+
                 if line_amount >= 0:
                     account_id = order.mode.journal.default_credit_account_id.id
                 else:
@@ -265,7 +265,7 @@
                     'period_id': order.period_id.id,
                     'currency_id': currency_id,
                 }
-
+
                 amount = self.pool.get('res.currency').compute(cr, uid, currency_id, company_currency_id, line_amount, context=ctx)
                 if currency_id <> company_currency_id:
                     amount_cur = self.pool.get('res.currency').compute(cr, uid, company_currency_id, currency_id, amount, context=ctx)
@@ -290,7 +290,7 @@
                     amount_currency = False
                     move_currency_id = False

-                self.pool.get('account.move.line').create(cr, uid, {
+                bank_line_id = self.pool.get('account.move.line').create(cr, uid, {
                     'name': line.move_line_id and line.move_line_id.name or '/',
                     'move_id': move_id,
                     'date': order.date_done,
@@ -305,6 +305,8 @@
                     'currency_id': move_currency_id,
                 }, context)

+                self.pool.get('account.move.line').write(cr, uid, [partner_line_id, bank_line_id], {'ref': line.move_line_id and line.move_line_id.ref or False})
+
                 aml_ids = [x.id for x in self.pool.get('account.move').browse(cr, uid, move_id, context).line_id]
                 for x in self.pool.get('account.move.line').browse(cr, uid, aml_ids, context):
                     if x.state <> 'valid':
